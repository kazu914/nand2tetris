// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Decode.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */
 CHIP Decode {
     IN  instruction[16];
     OUT a,
         c1,c2,c3,c4,c5,c6,
         d1,d2,d3,
         j1,j2,j3;

     PARTS:
     Mux(a=false, b=instruction[12], sel=instruction[15], out=a);
     Mux(a=false, b=instruction[11], sel=instruction[15], out=c1);
     Mux(a=false, b=instruction[10], sel=instruction[15], out=c2);
     Mux(a=false, b=instruction[9],  sel=instruction[15], out=c3);
     Mux(a=false, b=instruction[8],  sel=instruction[15], out=c4);
     Mux(a=false, b=instruction[7],  sel=instruction[15], out=c5);
     Mux(a=false, b=instruction[6],  sel=instruction[15], out=c6);
     Mux(a=false, b=instruction[5],  sel=instruction[15], out=d1);
     Mux(a=false, b=instruction[4],  sel=instruction[15], out=d2);
     Mux(a=false, b=instruction[3],  sel=instruction[15], out=d3);
     Mux(a=false, b=instruction[2],  sel=instruction[15], out=j1);
     Mux(a=false, b=instruction[1],  sel=instruction[15], out=j2);
     Mux(a=false, b=instruction[0],  sel=instruction[15], out=j3);
 }
